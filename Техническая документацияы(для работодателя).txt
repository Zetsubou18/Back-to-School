Техническое описание проекта "Back to School"

Обзор проекта:
"Back to School" — хоррор-игра, созданная в Unity на основе карты из Minecraft с одноимённым названием. Игрок играет за учителя,
 который ночью возвращается в школу, чтобы расследовать убийство ученика. Проект был создан в сжатые сроки с акцентом на перенос атмосферы оригинальной карты и создание хоррор-опыта.

Техническая реализация:
- Версия Unity: 2022.3.37f1
- Язык программирования: C#
- Игровая механика:
  - Исследование: Игрок перемещается по школьной карте, взаимодействуя с объектами (например, столы, двери) для поиска улик. Реализовано через Raycast и систему триггеров Unity.
  - Атмосфера: Использованы звуковые эффекты (шорохи, шаги) и мигающий свет для создания напряжения. Свет управляется скриптами с использованием Light компонентов.
  - Карта: Импортирована из Minecraft и адаптирована для Unity. Карта включает коридоры, классы и другие школьные локации.
- Интерфейс: Минималистичный UI для отображения подсказок и взаимодействия с объектами, создан с использованием Unity UI.
- Хоррор-элементы: Мигающий свет (через скрипты с таймерами), звуковые эффекты и тёмные текстуры для усиления атмосферы.

Проблемы, с которыми столкнулся:
- Баги со светом: Мигающий свет работает некорректно.
- Проблемы с картой: Наложение текстур и геометрические ошибки (например, дыры в стенах) из-за быстрого переноса карты из Minecraft. Не хватило времени на полную оптимизацию мешей.
- Производительность: Высокая нагрузка на рендеринг из-за большого количества объектов и текстур. Частично решено снижением качества текстур, но требуется дальнейшая оптимизация.
- Анимации и взаимодействие: Некоторые интерактивные объекты (например, двери) работают некорректно из-за быстрой реализации без тщательной отладки.

Уроки, вынесенные из проекта:
- Перенос карт из Minecraft в Unity требует тщательной обработки геометрии и текстур для избежания багов.
- Хоррор-атмосфера сильно зависит от качества света и звука, что требует больше времени на настройку.
- Быстрая разработка приводит к компромиссам в качестве, особенно в оптимизации и тестировании.

Возможные улучшения:
- Исправить баги с освещением, синхронизировав таймеры и оптимизировав шейдеры.
- Переработать карту для устранения наложения текстур и геометрических ошибок.
- Добавить больше хоррор-механик (например, случайные события или врагов).
- Оптимизировать производительность, уменьшив количество полигонов и улучшив LOD (уровни детализации).